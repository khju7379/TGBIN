//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace TG_BIN.wsdominoadmin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsDominoAdminPortSoapBinding", Namespace="urn:DefaultNamespace")]
    public partial class wsDominoAdminElement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GETUSERPASSWORDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETUSERINFOOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsDominoAdminElement() {
            this.Url = global::TG_BIN.Properties.Settings.Default.TG_BIN_wsdominoadmin_wsDominoAdminElement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GETUSERPASSWORDCompletedEventHandler GETUSERPASSWORDCompleted;
        
        /// <remarks/>
        public event GETUSERINFOCompletedEventHandler GETUSERINFOCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:DefaultNamespace", ResponseNamespace="urn:DefaultNamespace")]
        [return: System.Xml.Serialization.SoapElementAttribute("GETUSERPASSWORDReturn")]
        public string GETUSERPASSWORD(string USERKEY) {
            object[] results = this.Invoke("GETUSERPASSWORD", new object[] {
                        USERKEY});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETUSERPASSWORDAsync(string USERKEY) {
            this.GETUSERPASSWORDAsync(USERKEY, null);
        }
        
        /// <remarks/>
        public void GETUSERPASSWORDAsync(string USERKEY, object userState) {
            if ((this.GETUSERPASSWORDOperationCompleted == null)) {
                this.GETUSERPASSWORDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETUSERPASSWORDOperationCompleted);
            }
            this.InvokeAsync("GETUSERPASSWORD", new object[] {
                        USERKEY}, this.GETUSERPASSWORDOperationCompleted, userState);
        }
        
        private void OnGETUSERPASSWORDOperationCompleted(object arg) {
            if ((this.GETUSERPASSWORDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETUSERPASSWORDCompleted(this, new GETUSERPASSWORDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:DefaultNamespace", ResponseNamespace="urn:DefaultNamespace")]
        [return: System.Xml.Serialization.SoapElementAttribute("GETUSERINFOReturn")]
        public string GETUSERINFO(string EMPNO) {
            object[] results = this.Invoke("GETUSERINFO", new object[] {
                        EMPNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETUSERINFOAsync(string EMPNO) {
            this.GETUSERINFOAsync(EMPNO, null);
        }
        
        /// <remarks/>
        public void GETUSERINFOAsync(string EMPNO, object userState) {
            if ((this.GETUSERINFOOperationCompleted == null)) {
                this.GETUSERINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETUSERINFOOperationCompleted);
            }
            this.InvokeAsync("GETUSERINFO", new object[] {
                        EMPNO}, this.GETUSERINFOOperationCompleted, userState);
        }
        
        private void OnGETUSERINFOOperationCompleted(object arg) {
            if ((this.GETUSERINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETUSERINFOCompleted(this, new GETUSERINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETUSERPASSWORDCompletedEventHandler(object sender, GETUSERPASSWORDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETUSERPASSWORDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETUSERPASSWORDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETUSERINFOCompletedEventHandler(object sender, GETUSERINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETUSERINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETUSERINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591